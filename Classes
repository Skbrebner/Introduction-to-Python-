class myClass():      
  def method1(self):   
    print "myClass method1"
    
  def method2(self, someString):
    print "myClass method2: " + someString   

class anotherClass(myClass):     
  def method2(self):                  
    print "anotherClass method2"
    
  def method1(self):
    myClass.method1(self);
    print "anotherClass method1"  
     
def main():
  
  c = myClass()
  c.method1()
  c.method2("This is a string")
  c2 = anotherClass()          
  c2.method1()                  
  c2.method2()
  
if __name__ == "__main__":
  main()






# you can define function- method1 and method2, an object variable. The first arguement of any one of the methods is the 'self" arguement.
# In this case, another class is based on my class. Another class is inhereting from 'myclass'.
# In these lines of code refering to methods, we are overwriting the methods defined in myclass.
# these lines of code. 'c2" is an instance of another class. 
#
