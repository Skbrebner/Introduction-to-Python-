
import os
from os import path

import datetime
from datetime import date, time, timedelta
import time


def main():
    
  print os.name;
  
  print "Item exists: " + str(path.exists("textfile.txt"))
  print "Item is a file: " + str(path.isfile("textfile.txt"))
  print "Item is a directory: " + str(path.isdir("textfile.txt"))
  
  print "Item's path: " + str(path.realpath("textfile.txt"))
  print "Item's path and name: " + str(path.split(path.realpath("textfile.txt")))
  
  t = time.ctime(path.getmtime("textfile.txt"))
  print t
  print datetime.datetime.fromtimestamp(path.getmtime("textfile.txt"))
  
  td= datetime.datetime.now() - datetime.datetime.fromtimestamp(path.getmtime("textfile.txt"))
  print "It has been " + str(td) + "The file was modified"
  print "Or, " + str(td.total_seconds()) + " seconds"
  
if __name__ == "__main__":main()




  
#find out information about the file, whether it exists, 
#what the path of the file is, whether a path is a file or a directory
# print os.name;  will print the name of the os (operating system module). In my case, posix? 
# the three pring lines refer to Checking for item existence and type
# next 2 print lines Work with file paths
#path.split refers to spliting the path into two parts- the path and then the name of the file next to it. 
#next few lines refer to the modification time. The time the files were last modified. 
#Use the time.ctime (time is class, .ctime is function) .path module to .getmtime
#get modifictation time. 
#Last bit is date math. Variable is called td. .now function brings up the current date and time. We subtract
#off the value off the .getmtime using the .fromtimestamp method on the .datetime class. 
  
